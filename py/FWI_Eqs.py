#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Aug  9 12:32:32 2019

@author: rodell
"""

import numpy as np



import pandas as pd


#
#""" ####################################################################### """
#""" ############ Canadian Forest Fire Weather Index System ################ """
#
#e  = np.exp
#ln = np.log
#
#
#
#
#""" ####################################################################### """
#""" ###################### Equations and Procedures ####################### """
#
#####################################
####Fine Fuel Moisture Code (FFMC)
#####################################
###Unknowns
#F_o = '?'
#r_o = '?'
#H   = '?'
#T   = '?'
#W   = '?'
#k_1 = '?'  ##I think it might be k_i 
#
#
#
###(1)
#m_o = 147.2 * (101 - F_o) / (59.5 + F_o)  
#
###(2)
#if 1.5 > r_o > 0.5:
#    r_f = r_o - 0.5                       
#
###(3a)
#if m_o <= 150:
#    m_r = m_o + 42.5 * r_f * (e** -(100 / (251 - m_o))) * (1 - e** -(6.93/r_f))
#else:
###(3b)
#    m_r = m_o + 42.5 * r_f * (e** -(100 / (251 - m_o))) * (1 - e** -(6.93/r_f)) + \
#    0.0015 * ((m_o - 150)** 2) * (r_f** 2)
#
###(4) 
#E_d = 0.942 * (H** 0.679) + (11 * (e** ((H - 100) / 10))) + (0.18 * (21.1 - T) * (1 - e** -(0.115 * H)))
#
###(5)
#E_w = 0.618 * (H** 0.753) + (10 * (e** ((H - 100) / 10))) + (0.18 * (21.1 - T) * (1 - e** -(0.115 * H)))
#
###(6a)
#k_o = 0.424 * (1 - ((H / 100)** 1.7)) + 0.0694 * (W** 0.5) * (1 - ((H / 100)** 8))
#
###(6b)
#k_d = k_o * (0.581 * (e** (0.0365 * T)))
#
###(7a)
#k_i = 0.424 * (1 - (((100 - H) / 100)** 1.7)) + 0.0694 * (W** 0.5) * (1 - (((100 - H) / 100)** 8))
#
###(7b)
#k_w = k_1 * (0.581 * (e** (0.0365 * T)))
#
###(8)
#m = E_d + (m_o - E_d) * (10** -(k_d))
#
###(9)
#m = E_w - (E_w - m_o) * (10** -(k_w))
#
###(10)
#F = 59.5 * ((250 - m) / (147.2 + m))
#
#
#
#
#####################################
####Duff Moisture Code (DMC)
#####################################
###Current Unknowns
#P_o = 6.0
#L_e = '?'  ##Efective day legnth (coukd use eq from num&meth project)
#
###(11)
#if  2.8 > r_o >= 1.5:
#    r_e = 0.92 * r_o - 1.27 
#
###(12)
#M_o = 20 + e** (5.6348 - (P_o / 43.43))
#
###(13a)
#if P_o <= 33:
#    b = 100 / (0.5 + 0.3 * P_o)
#    
###(13b)
#elif 33 < P_o <= 65:
#    b = 14 - (1.3 * ln(P_o))
#    
###(13c)
#else:
#    b = 6.2 * ln(P_o) - 17.2
#
###(14)
#M_r = M_o + ((1000 * r_e) / (48.77 + b * r_e))
#
###(15)
#P_r = 244.72 - 43.43 * ln(M_r - 20) 
#
###(16)
#K = 1.894 * (T + 1.1) * (100 - H) * (L_e * 10** -6)
#
###(17)
#P = P_o + 100 * K  ## P_o = P_r see paper
#
#
#####################################
####Drought Code (DC)
#####################################
###Current Unknowns
#D_o = '?'  ## likely  D_o = 35 need to verifiy
#L_f = '?'  ##Day lenght factors
#
###(18)
#if r_o >= 2.8:
#    r_d = 0.83 * r_o - 1.27
#
###(19)
#Q_o = 800 * e** -(D_o/400)
#
###(20)
#Q_r = Q_o + 3.937 * r_d
#
###(21)
#D_r = 400 * ln(800/Q_r)
#
###(22)
#V = 0.36 * (T + 2.8) + L_f
#
###(23)
#D = D_o + 0.5 * V  #D_o = D_r
#
#####################################
####Initial Spread Index (ISI)
#####################################
#
###(24)
#f_W = e** (0.05039 * W)
#
###(25)
#f_F = 91.9 * (e** -(0.1386 * m)) * (1 + ((m** 5.31) / (4.93 * 10** 7)))
#
###(26)
#R = 0.208 * f_W * f_F
#
#
#####################################
####Buildup Index
#####################################
#
###(27a)
#if P <= (0.4 * D):
#    U = (0.8 * P * D) / (P + (0.4 *D))
#    
###(27b)
#else:
#    U = P - (1 - (0.8 * D) / (P + (0.4 *D))) * (0.92 + ((0.0114 * P)** 1.7))
#
#
#
#####################################
####Fire Weather Index (FWI)
#####################################
#
###(28a)
#if U <= 80:
#    f_D = (0.626 * (U** 0.809)) + 2
#
###(28b)
#else:
#    f_D = 1000 / (25 + (108.64 * (e** -(0.023 * U))))
#
###(29)
#B = 0.1 * R * f_D
#
###(30a)
#if B > 1:
#    S = e** (2.72 * ((0.434 * ln(B))** 0.647))
#
###(30b)
#else:
#    S = B
#
#FWI = S
#
#####################################
####Daily Severity Rating (DSR)
#####################################
#
###(31)
#DSR = 0.0272 * (FWI** 1.77)





shape = df_large.shape


df = pd.DataFrame(pd.np.empty((shape)))
df.empty


df_small = df + df_small








    

        





















